#!/bin/bash

# Will be loaded ONCE in the start of the main loop
# If you can't fit something you need here, look into editing the watchdog itself!
# Functions must be referenced in watchdog.cfg to actually run.

        . setup 2>/dev/null
        set -a

serverRestartScheduler(){
loadVars;
echo "[INFO] serverRestartScheduler module running on "$shortPackID
execdir=$(pwd)
export execdir=$execdir
while true; do
sleep $restartSleepTime

if [ ! -f ".wdr" ]; then
	if [ ! -f $lock ]; then
	echo 'bash rebootscript' | at 0:00 -M
	echo 'bash rebootscript2' | at 12:00 -M
	touch .wdr
	fi
fi
sleep 220
done
}

saveHandler(){
loadVars;
echo "[INFO] saveHandler module running on" $shortPackID
saveHandlerTime=$((saveHandlerTimeMins * 60))
while true; do
msgAppend="§d<Save>§r Saved the world."; broadcastInternal;

# Requires Chunk Pregenerator
command="save-all"; export command=$command; sendCommand;
        if [ "$doFullGC" == "true" ]; then
        command="pregen utils gc"; export command=$command; sendCommand;
        fi
        sleep $saveHandlerTime
done
}

announceHandler(){
sleep 2
        source setup
echo "[INFO] announceHandler module running on" $shortPackID
while true; do
set -a                     
unset loadnow; unset memtotal; unset usemem; unset totalmem; unset usedstor; unset totalstor
			usedstor=$(df --output=avail -h "/" | sed '1d;s/[^0-9]//g') # sp
			usedstorb=$(df --output=avail -h "/mnt/linux_store_hdd" | sed '1d;s/[^0-9]//g') # bp
		        sysload=$(cat /proc/loadavg | head -c 5) # sl				
# ratings here
pre_sl=$(cat /proc/loadavg | head -c 1);

if [ "$pre_sl" -lt 3 ]; then
	rating_sl="§2<OK>"
elif [ "$pre_sl" -eq 3 ]; then
	rating_sl="§2<OK>"
elif [ "$pre_sl" -eq 4 ]; then
	rating_sl="§6<Warning>"
elif [ "$pre_sl" -gt 4 ]; then
	rating_sl="§c§l<Overloaded>" 
fi

pre_sp=$usedstor

if [ "$pre_sp" -lt 60 ]; then
	rating_sp="§6<Warning>"
else
	rating_sp="§2<OK>"
fi

pre_bp=$usedstorb

if [ "$pre_bp" -lt 30 ]; then
        rating_bp="§6<Warning>"
else
        rating_bp="§2<OK>"
fi
		msgAppend="§9<Server Health> §2(Best) §2<Rating>"; broadcastInternal
		#msgAppend="§9Memory, §3$meminfo"; broadcastInternal
		msgAppend="§9System Load: §3$sysload§2(< 4.00) $rating_sl"; broadcastInternal
		msgAppend="§9Backup Pool: §3$usedstorb §3GiB §9free §2(>30) $rating_bp"; broadcastInternal
		msgAppend="§9Server Pool: §3$usedstor §3GiB §9free §2(>30) $rating_sp"; broadcastInternal	
sleep 1500
done
}

lastsnapbossd(){
# Handle the boss bar
sleep 1
while true; do
sleep 5

	if [ -f ".hardmode" ]; then
	command="bossbar set minecraft:1 color purple"; sendCommand
	command="bossbar set minecraft:1 style notched_6"; sendCommand         
	else
	command="bossbar set minecraft:1 color blue"; sendCommand
	command="bossbar set minecraft:1 style progress"; sendCommand         
	fi

command="bossbar set minecraft:1 players @a"; sendCommand
command="bossbar set minecraft:1 name \"Lastsnap Vanilla\""; sendCommand
sleep .3
command="bossbar set minecraft:1 visible true"; sendCommand
sleep 1.5
command="bossbar set minecraft:1 value 2"; sendCommand
sleep 1.5
command="bossbar set minecraft:1 value 4"; sendCommand
sleep 1.5
command="bossbar set minecraft:1 name \"Thank you for playing today!\""; sendCommand
command="bossbar set minecraft:1 value 6"; sendCommand
sleep 1.5
command="bossbar set minecraft:1 value 8"; sendCommand
sleep 1.5
command="bossbar set minecraft:1 value 10"; sendCommand
sleep 1.5
command="bossbar set minecraft:1 value 12"; sendCommand;
sleep 1.5
command="bossbar set minecraft:1 name \"Tab currently displays:\""; sendCommand;
command="bossbar set minecraft:1 value 14"; sendCommand;
sleep 1.5
command="bossbar set minecraft:1 value 16"; sendCommand;
sleep 1.5

	if [ ! -f ".hardmode" ]; then
	command="bossbar set minecraft:1 name \"Number of times you died\""; sendCommand;
	else
	command="bossbar set minecraft:1 name \"Your health bar to everyone\""; sendCommand;
	fi

command="bossbar set minecraft:1 value 18"; sendCommand;
sleep 1.5
command="bossbar set minecraft:1 value 20"; sendCommand;
sleep 1.5
command="bossbar set minecraft:1 value 22"; sendCommand
command="bossbar set minecraft:1 name \"The current render distance is:\""; sendCommand;
sleep 1.5
command="bossbar set minecraft:1 value 24"; sendCommand
sleep 1.5
command="bossbar set minecraft:1 value 26"; sendCommand
command="bossbar set minecraft:1 name \"8 chunks\""; sendCommand;
sleep 1.5
command="bossbar set minecraft:1 value 28"; sendCommand
sleep 1.5
command="bossbar set minecraft:1 visible false"; sendCommand
command="bossbar set minecraft:1 value 0"; sendCommand
if [ "$n" = "1100" ]; then
        n="2000"
else
	n="1100"
fi
sleep $n
done
}

hardmode(){
echo "[INFO] Started Hardmode module"
	
	function hardmodeDisable(){
	# run commands on disable
	echo "Disabling hardmode..."
	sleep 3
	rm .hardmode
	command="bossbar set minecraft:hardmode visible false"; sendCommand
	command="weather rain 1"; sendCommand
	command="gamerule naturalRegeneration true"; sendCommand
	command="scoreboard objectives setdisplay list Display2"; sendCommand
	command="datapack enable \"file/multiplayer sleep v1.0.1.zip\""; sendCommand
	command="difficulty normal"; sendCommand
	}

	function hardmodeEnable(){
	# run commands on enable
	touch .hardmode
	command="bossbar set minecraft:hardmode players @a"; sendCommand
command="bossbar set minecraft:hardmode visible true"; sendCommand
command="bossbar set minecraft:hardmode name \"Hardmode is beginning...\""; sendCommand
command="effect give @a minecraft:nausea 6 1"; sendCommand
command="bossbar set minecraft:hardmode value 0"; sendCommand
sleep 3
command="bossbar set minecraft:hardmode name \"Hardmode will last for an hour.\""; sendCommand
sleep 6
command="bossbar set minecraft:hardmode name \"During this hour, the game will be harder.\""; sendCommand
sleep 6
command="bossbar set minecraft:hardmode name \"Good luck!\""; sendCommand
sleep 6
command="bossbar set minecraft:hardmode name \"\""; sendCommand
command="weather thunder"; sendCommand
command="gamerule naturalRegeneration false"; sendCommand
command="datapack disable \"file/multiplayer sleep v1.0.1.zip\""; sendCommand
command="playsound minecraft:ambient.cave master @a 0 0 0 100000000"; sendCommand
command="playsound minecraft:ambient.cave master @a 0 0 0 100000000"; sendCommand
command="playsound minecraft:ambient.cave master @a 0 0 0 1000000000"; sendCommand
command="scoreboard objectives setdisplay list health"; sendCommand
command="difficulty hard"; sendCommand
# end cool stuff exec
sleep 600
        command="bossbar set minecraft:hardmode players @a"; sendCommand
command="bossbar set minecraft:hardmode value 1"; sendCommand
sleep 600
command="weather thunder"; sendCommand
        command="bossbar set minecraft:hardmode players @a"; sendCommand
command="bossbar set minecraft:hardmode value 2"; sendCommand
sleep 600
command="weather rain 1"; sendCommand
        command="bossbar set minecraft:hardmode players @a"; sendCommand
command="bossbar set minecraft:hardmode value 3"; sendCommand
sleep 600
command="weather thunder"; sendCommand
        command="bossbar set minecraft:hardmode players @a"; sendCommand
command="bossbar set minecraft:hardmode value 4"; sendCommand
sleep 600
command="weather rain 1"; sendCommand
        command="bossbar set minecraft:hardmode players @a"; sendCommand
command="bossbar set minecraft:hardmode value 5"; sendCommand
sleep 600
command="weather thunder"; sendCommand
        command="bossbar set minecraft:hardmode players @a"; sendCommand
command="bossbar set minecraft:hardmode value 6"; sendCommand
command="bossbar set minecraft:hardmode name \"Hardmode is over.\""; sendCommand
command="playsound minecraft:ambient.cave master @a 0 0 0 1000000000"; sendCommand
sleep 4
	hardmodeDisable;

	}

# UNCOMMENT ONLY FOR TESTING
#hardmodeEnable
#hardmodeDisable

# main loop. we wait, randomize, and if there's a match, enable hardmode.
# we also put in some kind of lock.
while true; do

# check lock file before doing anything
if [ -f ".hardmode" ]; then
echo "Hardmode is active"
echo "Disabling it now."
hardmodeDisable;

else

echo "Hardmode is not active, roll dice."
dice=$(shuf -i 1-128 -n 1 --random-source=/dev/urandom);
	if [ "$dice" -eq "1" ]; then
	echo "Dice landed on 1, enable hardmode"
	# lock file
	touch .hardmode
	hardmodeEnable;
	else
	echo "Roll didn't land a 1."
	hardmodeDisable;
	fi
fi
# s in an h
sleep 3600
done

}

SoWHandler(){
set -a
echo "Started SoWHandler"
echo "Started save-off daemon"
useSoW="true"
sendSaveOn &

while true; do

sleep 70
load=$(cat /proc/loadavg | head -c 1)

if [ "$load" -lt 6 ]; then
command="save-all"
sendCommand;
sync
sleep 2
sync
sync
time=$SECONDS
echo "SoWHandler tick in $time"
SECONDS=0
else
echo "SoWHandler overloaded."
fi

done
}

jokes(){
while true; do
sleep 418
dice=$(shuf -i 1-4180 -n 1 --random-source=/dev/urandom);
if [ "$dice" -eq 1 ]; then
	# Joke 1
	echo "joke1"
	msgAppend="Droopy lives in the shade."; broadcastInternal
fi

if [ "$dice" -eq 2 ]; then
        # Joke 2
	echo "joke2"
	msgAppend="Droopy lives under a tree."; broadcastInternal
fi

if [ "$dice" -eq 3 ]; then
	# Joke 3
	echo "joke3"
	msgAppend="No one gives him berries."; broadcastInternal
fi
done
}