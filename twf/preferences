#!/bin/bash

echo "loaded preferences file"
set -a
# Only change this if you know what you are doing.
        cfgfile=$execdir"/preferences"
        logfile=$execdir"/logFile"
        lock=$execdir"/wlock" 
        modfile=$execdir"/modules"

# Set here something that will let TW identify the pack. The default is okay most of the time.
 lookFor=$fpid"/runtime"
 
# If "true", the watchdog will enforce this configuration file. Usually you don't need to set this.
 enforceCfg="false"

# If "true", console will show an instructive warning about tmux.
 showWarning="true"

# If "true", the watchdog will use a spinner animation when applicable.
# Currently the ""spinner"" is just a [...]
 useSpinner="true"

# If "true", the watchdog will use an algorithm to calculate timings. Makes startup a bit slower.
# This does not guarantee smarter usage of system resources, just prevents the watchdog
# from hogging a lot of CPU.
 useThreadedCalculation="true"
 
# if "true", watchdog -k will kill watchdogs that belong to every and all users.
# Unimplemented, and will likely create overhead when it is.
 killRootWatchdog="false"

# How long saveHandler will sleep for before doing a save and clean (in minutes).
 saveHandlerTimeMins="60"

# Whether or not the saveHandler will clean memory after a save.
 doFullGC="true"

# How long sleepRestartScheduler will sleep for before checking for scheduled jobs (in seconds)
 restartSleepTime="1000"

# Name of the admin that protectAdmin will protect
# This is a joke command.
 adminName="yagoply"

# Should the watchdog force the server to use an alternate saving method?
# The sync-on-write saving method may cause less corruption on crash or power loss.
 useSoW="true"

# If true, the AnnounceHandler module will be used.
# Here it displays a small server health report.
 useAnnounce="true"

# If true, the Hardmode module will be used.
# Randomly starts a Ultra Hardcore-like event
 useHardmode="true"

# If true, the Jokes module will be used.
 useJokes="true"

# If true, the Bossbar module will be used.
# Not to be confused with bossbarRoutines. This just says thank you in a boss bar and some info.
 useBossbar="true" 

# If true, bossbarRoutines will be verbose.
 verboseBossbarRoutines="false"

# If true, the master watchdog thread will export true or false to
# /dev/shm/twf_isRunning_$shortPackID
 exportRunningStats="false"

# Select which modules the watchdog is going to load when it starts

        if [ "$isModLoadingPhase" == "true" ]; then
        # Define which modules from the modules file to load here
        # format -> modulename ; for sequential execution
        # format -> modulename & for parallel execution

       echo "started isModuleLoadingPhase"      
       if [ "$useSoW" == "true" ]; then
		SoWHandler &
       fi
       if [ "$useAnnounce" == "true" ]; then
       		announceHandler &
       fi
       if [ "$useHardmode" == "true" ]; then
       		hardmode &
       fi
       if [ "$useBossbar" == "true" ]; then
		lastsnapbossd &
       fi
       if [ "$useJokes" == "true" ]; then
       		jokes &
       fi

       echo "finished isModuleLoadingPhase" 
        fi

